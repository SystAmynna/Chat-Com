import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'main'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.jline:jline:3.21.0'
    implementation 'net.java.dev.jna:jna:5.13.0'

}

test {
    useJUnitPlatform()
}

shadowJar {
    archiveClassifier.set('')
    archiveFileName.set('client.jar')
    manifest {
        attributes(
                'Main-Class': 'client.Client'
        )
    }
}

task shadowJarServer(type: ShadowJar) {
    archiveClassifier.set('')
    archiveFileName.set('server.jar')
    manifest {
        attributes(
                'Main-Class': 'server.Server'
        )
    }
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}

task buildAll {
    dependsOn shadowJar, shadowJarServer
    doLast {
        println 'All tasks completed!'
    }
}